/*!
 * Bootstrap Fileselect v3.1.2
 * (c) 2016-2020 Jonathan Nessier, Neoflow
 * Licensed under MIT (https://github.com/Neoflow/Bootstrap-Fileselect/blob/master/LICENSE)
 */
!function(i,t){const e=function(i,e){this.$fileInput=t(i),this.options=e,this.userLanguage="en",this.$fileselect=t(this),this.metadata=this.$fileInput.data(),this.$inputGroup=t("<div>").addClass("custom-file"),this.$labelInput=t("<label>").addClass("custom-file-label"),this.translations={en:{chooseFile:"Choose file...",chooseFiles:"Choose files...",browse:"Browse",rules:{numberOfFiles:"The number of uploadable files is limited to [num] file(s)",fileExtensions:"The files are restricted to the following file extensions: [ext]",fileSize:"The file size is limited to [size]"}}},this.init()};e.defaults=(e.prototype={defaults:{restyling:!0,allowedFileSize:!1,allowedFileExtensions:!1,allowedNumberOfFiles:!1,language:!1,translations:{},validationCallback:function(i,t){alert(i)}},init:function(){return this.config=this.loadConfig(),this.translations=this.loadTranslation(),this.config.restyling&&(this.$fileInput.addClass("custom-file-input").before(this.$inputGroup),this.$inputGroup.append(this.$fileInput,this.$labelInput),this.$labelInput.attr("data-browse",this.translations.browse),this.$labelInput.css({overflow:"hidden"}),this.$fileInput[0].hasAttribute("multiple")?this.$labelInput.text(this.translations.chooseFiles):this.$labelInput.text(this.translations.chooseFile)),this.$fileInput.on("change",t.proxy(this.changeEvent,this)),t(this)},changeEvent:function(i){this.$fileInput.trigger("bs.fs.change",[this]);const e=this.$fileInput[0].files,s=t.map(e,(function(i){return i.name})).join(", ");let l=!1;return this.validateNumberOfFiles(e)&&this.validateFileExtensions(e)&&this.validateFileSize(e)?(this.$labelInput.text(s),l=!0):this.$fileInput.val(null),this.$fileInput.trigger("bs.fs.changed",[this]),l},loadConfig:function(){let i=t.extend({},this.defaults,this.options,this.metadata);return"string"==typeof i.allowedFileExtensions&&(i.allowedFileExtensions=i.allowedFileExtensions.split(",")),i},loadTranslation:function(){t.each(this.config.translations,t.proxy((function(i,t){this.translations[i]=t}),this));let i=(this.config.language||navigator.language||navigator.userLanguage).substring(0,2).toLowerCase(),e=t.map(this.translations,(function(i,t){return t}));return t.inArray(i,e)>=0?this.userLanguage=i:console.info("User language ("+i+") has no translation. Switched to default language ("+this.userLanguage+")."),this.translations[this.userLanguage]},validateNumberOfFiles:function(i){this.$fileInput.trigger("bs.fs.validate",[this]).trigger("bs.fs.number-of-files-validate",[this]);let t=!0;return this.config.allowedNumberOfFiles&&i.length>parseInt(this.config.allowedNumberOfFiles)&&(this.config.validationCallback(this.translations.rules.numberOfFiles.replace("[num]",this.config.allowedNumberOfFiles),"allowedNumberOfFiles",this),t=!1),this.$fileInput.trigger("bs.fs.validated",[this]).trigger("bs.fs.number-of-files-validated",[this]),t},validateFileExtensions:function(i){this.$fileInput.trigger("bs.fs.validate",[this]).trigger("bs.fs.file-extensions-validate",[this]);let e=!0;return this.config.allowedFileExtensions&&t.each(i,t.proxy((function(i,s){var l=s.name.replace(/^.*\./,"").toLowerCase();if(-1===t.inArray(l,this.config.allowedFileExtensions))return this.config.validationCallback(this.translations.rules.fileExtensions.replace("[ext]",this.config.allowedFileExtensions.join(", ")),"allowedFileExtensions",this),void(e=!1)}),this)),this.$fileInput.trigger("bs.fs.validated",[this]).trigger("bs.fs.file-extensions-validated",[this]),e},validateFileSize:function(i){this.$fileInput.trigger("bs.fs.validate",[this]).trigger("bs.fs.file-size-validate",[this]);let e=!0;return this.config.allowedFileSize&&t.each(i,t.proxy((function(i,t){if(t.size>this.config.allowedFileSize)return this.config.validationCallback(this.translations.rules.fileSize.replace("[size]",Math.round(this.config.allowedFileSize/1024/1024)+"MB"),"allowedFileSize",this),void(e=!1)}),this)),this.$fileInput.trigger("bs.fs.validated",[this]).trigger("bs.fs.file-size-validated",[this]),e}}).defaults,t.fn.fileselect=function(i){return this.each((function(){new e(this,i)})),this},i.Fileselect=e}(window,jQuery);